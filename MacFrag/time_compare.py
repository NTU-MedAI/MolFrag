# The script was tested on Linux platform.

import random
import time 
import os
#from rdkit import Chem
#from rdkit.Chem.BRICS import BRICSDecompose


f=open('/data/MacFrag/chembl28_mw500.smi','r') #Mols collected from ChEMBL database with molecular weight lower than 500; change the path if neccessary
fw=open('/data/MacFrag/time_macfrag.txt','w') #Output file that record the run time of MacFrag; change the path if neccessary

smiles=[line.stip().split()[0] for line in f.readlines()]

nums=list(range(10000,110000,10000))


for num in nums:
    fw.write(str(num)+' ')
    time_sum=0
    for i in range(3):
        rand_smiles=random.sample(smiles, num)
        fw1=open('/data/MacFrag/tmpin.smi','w')
        for rs in rand_smiles:
            fw1.write(rs+'\n')
        fw1.close()
        main='/data/MacFrag/MacFrag.dist/MacFrag -i /data/MacFrag/tmpin.smi -o /data/MacFrag/ -maxBlocks 6 -maxSR 8 -asMols False -minFragAtoms 1'

#        main='./fragment -r RECAP.txt -i tmpin.txt -n 2 -k 6 -o mout.txt -x'  #mmblocks
        start=time.time()
        os.system(main)
        end=time.time()
        fw.write(str(end-start)+' ')
        time_sum+=(end-start)
    time_average=round(time_sum/3)
    fw.write(str(time_average)+'\n')
    
f.close()
fw.close()

'''
# calculate the run time of BRICS in RDKit

import random
import time 
import os
from rdkit import Chem
from rdkit.Chem.BRICS import BRICSDecompose

f=open('/data/MacFrag/chembl28_mw500.smi','r') #Mols collected from ChEMBL database with molecular weight lower than 500; change the path if neccessary
fw=open('/data/MacFrag/time_brics.txt','w') #Output file that record the run time of BRICS; change the path if neccessary

smiles=[line.stip().split()[0] for line in f.readlines()]

nums=list(range(10000,110000,10000))

for num in nums:
    fw.write(str(num)+' ')
    time_sum=0
    for i in range(3):
        frags_brics=open('/data/MacFrag/frags_brics.txt','w')  #save the fragments generated by BRICS
        rand_smiles=random.sample(smiles, num)
        start=time.time()
        for s in rand_smiles:
            mol=Chem.MolFromSmiles(s)
            frags=BRICSDecompose(mol,keepNonLeafNodes=True)
            for frag in frags:
                frags_brics.write(frag+'\n')
        frags_brics.close()
        end=time.time()
        fw.write(str(end-start)+' ')
        time_sum+=(end-start)
    time_average=round(time_sum/3)
    fw.write(str(time_average)+'\n')
    
f.close()
fw.close()
'''
    
